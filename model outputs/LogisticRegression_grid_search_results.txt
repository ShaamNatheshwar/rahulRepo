Best performing model = LogisticRegression(penalty='l1', solver='liblinear') 

Accuracy score on the test set = 0.81 

Model parameters = {'C': 1.0, 'penalty': 'l1', 'solver': 'liblinear'} 

    mean_fit_time  std_fit_time  mean_score_time  std_score_time param_C  \
14       1.732965      0.296343         0.027726        0.006031     1.0   
16       2.260354      0.121971         0.032313        0.005733     1.0   
17       3.239734      0.260461         0.023537        0.004746     1.0   
15      14.268040      1.644302         0.028126        0.004297     1.0   
4        1.695863      0.069298         0.025533        0.002997     100   
10       2.149052      0.068960         0.027926        0.001892      10   
22       2.383824      0.189072         0.029521        0.002721     0.1   
21       7.099412      0.366244         0.026530        0.006985     0.1   
23       1.794200      0.109150         0.024135        0.004434     0.1   
11       8.454588      0.622625         0.025533        0.004352      10   
9       45.564143     12.606647         0.036702        0.016186      10   
8       18.381441      3.489979         0.024734        0.002919      10   
5       14.566043      0.813869         0.021542        0.000798     100   
3      100.569437     10.331483         0.038697        0.012763     100   
20       0.400129      0.030561         0.020745        0.001466     0.1   
2       63.415402      9.515525         0.038498        0.001954     100   
29       0.876853      0.239428         0.016357        0.002647    0.01   
27       3.946361      0.246345         0.023936        0.003511    0.01   
28       2.095903      0.315737         0.023337        0.003600    0.01   
26       0.287234      0.025075         0.023536        0.006326    0.01   
0        0.065321      0.011504         0.000000        0.000000     100   
1        0.053912      0.009910         0.000000        0.000000     100   
6        0.041089      0.002129         0.000000        0.000000      10   
7        0.041888      0.003397         0.000000        0.000000      10   
12       0.051861      0.010034         0.000000        0.000000     1.0   
13       0.056648      0.007147         0.000000        0.000000     1.0   
18       0.037698      0.001323         0.000000        0.000000     0.1   
19       0.037499      0.002863         0.000000        0.000000     0.1   
24       0.038099      0.003646         0.000000        0.000000    0.01   
25       0.046875      0.004326         0.000000        0.000000    0.01   

   param_penalty param_solver  \
14            l1    liblinear   
16            l2        lbfgs   
17            l2    liblinear   
15            l2    newton-cg   
4             l2        lbfgs   
10            l2        lbfgs   
22            l2        lbfgs   
21            l2    newton-cg   
23            l2    liblinear   
11            l2    liblinear   
9             l2    newton-cg   
8             l1    liblinear   
5             l2    liblinear   
3             l2    newton-cg   
20            l1    liblinear   
2             l1    liblinear   
29            l2    liblinear   
27            l2    newton-cg   
28            l2        lbfgs   
26            l1    liblinear   
0             l1    newton-cg   
1             l1        lbfgs   
6             l1    newton-cg   
7             l1        lbfgs   
12            l1    newton-cg   
13            l1        lbfgs   
18            l1    newton-cg   
19            l1        lbfgs   
24            l1    newton-cg   
25            l1        lbfgs   

                                               params  split0_test_score  \
14  {'C': 1.0, 'penalty': 'l1', 'solver': 'libline...           0.815556   
16     {'C': 1.0, 'penalty': 'l2', 'solver': 'lbfgs'}           0.811111   
17  {'C': 1.0, 'penalty': 'l2', 'solver': 'libline...           0.813333   
15  {'C': 1.0, 'penalty': 'l2', 'solver': 'newton-...           0.813333   
4      {'C': 100, 'penalty': 'l2', 'solver': 'lbfgs'}           0.791111   
10      {'C': 10, 'penalty': 'l2', 'solver': 'lbfgs'}           0.804444   
22     {'C': 0.1, 'penalty': 'l2', 'solver': 'lbfgs'}           0.813333   
21  {'C': 0.1, 'penalty': 'l2', 'solver': 'newton-...           0.813333   
23  {'C': 0.1, 'penalty': 'l2', 'solver': 'libline...           0.813333   
11  {'C': 10, 'penalty': 'l2', 'solver': 'liblinear'}           0.788889   
9   {'C': 10, 'penalty': 'l2', 'solver': 'newton-cg'}           0.788889   
8   {'C': 10, 'penalty': 'l1', 'solver': 'liblinear'}           0.782222   
5   {'C': 100, 'penalty': 'l2', 'solver': 'libline...           0.764444   
3   {'C': 100, 'penalty': 'l2', 'solver': 'newton-...           0.766667   
20  {'C': 0.1, 'penalty': 'l1', 'solver': 'libline...           0.788889   
2   {'C': 100, 'penalty': 'l1', 'solver': 'libline...           0.764444   
29  {'C': 0.01, 'penalty': 'l2', 'solver': 'liblin...           0.775556   
27  {'C': 0.01, 'penalty': 'l2', 'solver': 'newton...           0.775556   
28    {'C': 0.01, 'penalty': 'l2', 'solver': 'lbfgs'}           0.775556   
26  {'C': 0.01, 'penalty': 'l1', 'solver': 'liblin...           0.617778   
0   {'C': 100, 'penalty': 'l1', 'solver': 'newton-...                NaN   
1      {'C': 100, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   
6   {'C': 10, 'penalty': 'l1', 'solver': 'newton-cg'}                NaN   
7       {'C': 10, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   
12  {'C': 1.0, 'penalty': 'l1', 'solver': 'newton-...                NaN   
13     {'C': 1.0, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   
18  {'C': 0.1, 'penalty': 'l1', 'solver': 'newton-...                NaN   
19     {'C': 0.1, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   
24  {'C': 0.01, 'penalty': 'l1', 'solver': 'newton...                NaN   
25    {'C': 0.01, 'penalty': 'l1', 'solver': 'lbfgs'}                NaN   

    split1_test_score  split2_test_score  split3_test_score  \
14           0.828889           0.826667           0.821826   
16           0.833333           0.822222           0.810690   
17           0.840000           0.817778           0.808463   
15           0.833333           0.817778           0.808463   
4            0.844444           0.815556           0.797327   
10           0.833333           0.820000           0.790646   
22           0.806667           0.804444           0.804009   
21           0.806667           0.806667           0.804009   
23           0.802222           0.804444           0.804009   
11           0.820000           0.795556           0.790646   
9            0.820000           0.797778           0.786192   
8            0.817778           0.793333           0.790646   
5            0.795556           0.793333           0.777283   
3            0.795556           0.793333           0.777283   
20           0.775556           0.797778           0.792873   
2            0.791111           0.780000           0.772829   
29           0.744444           0.766667           0.781737   
27           0.744444           0.766667           0.781737   
28           0.744444           0.766667           0.781737   
26           0.617778           0.620000           0.619154   
0                 NaN                NaN                NaN   
1                 NaN                NaN                NaN   
6                 NaN                NaN                NaN   
7                 NaN                NaN                NaN   
12                NaN                NaN                NaN   
13                NaN                NaN                NaN   
18                NaN                NaN                NaN   
19                NaN                NaN                NaN   
24                NaN                NaN                NaN   
25                NaN                NaN                NaN   

    split4_test_score  mean_test_score  std_test_score  rank_test_score  
14           0.812918         0.821171        0.006162                1  
16           0.808463         0.817164        0.009394                2  
17           0.806236         0.817162        0.012097                3  
15           0.806236         0.815829        0.009620                4  
4            0.808463         0.811380        0.018588                5  
10           0.804009         0.810487        0.014728                6  
22           0.801782         0.806047        0.003960                7  
21           0.799555         0.806046        0.004476                8  
23           0.801782         0.805158        0.004211                9  
11           0.808463         0.800711        0.011831               10  
9            0.808463         0.800264        0.012573               11  
8            0.804009         0.797598        0.012258               12  
5            0.804009         0.786925        0.014183               13  
3            0.801782         0.786924        0.012959               14  
20           0.772829         0.785585        0.009757               15  
2            0.790646         0.779806        0.010296               16  
29           0.790646         0.771810        0.015765               17  
27           0.788419         0.771365        0.015250               18  
28           0.788419         0.771365        0.015250               18  
26           0.619154         0.618773        0.000869               20  
0                 NaN              NaN             NaN               30  
1                 NaN              NaN             NaN               27  
6                 NaN              NaN             NaN               26  
7                 NaN              NaN             NaN               25  
12                NaN              NaN             NaN               24  
13                NaN              NaN             NaN               21  
18                NaN              NaN             NaN               22  
19                NaN              NaN             NaN               23  
24                NaN              NaN             NaN               28  
25                NaN              NaN             NaN               29  
